import type { QueryResult } from 'iql';
import type { NextPage, GetServerSideProps } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'

import styles from '../../styles/Home.module.css'

import pg from '../../lib/pg';

import { findBlogPreviews } from '../../query/blog';
import type { BlogPost } from '../../query/blog';


const Home: NextPage<{ post?: BlogPost }> = ({ post }) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Sample Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      {
        post && (
          <main className={styles.main}>
            <h1 className={styles.title}>
              { post.title }
            </h1>
            <p className={styles.description}>
              { post.content }
            </p>
           </main>
         ) || (
           <main className={styles.main}>
              <h1 className={styles.title}>
                Post not found
              </h1>
           </main>
         )
      }
    </div>
  )
}


export const getServerSideProps: GetServerSideProps = async (context) => {
  let id = (Array.isArray(context.params?.id) ? context.params?.id[0] : context.params?.id) ?? '0';

  const { rows } = await pg.query<QueryResult<typeof findBlogPreviews>>(findBlogPreviews.compile({ id }));

  return {
    props: {
      post: rows[0] ?? null
    },
  }
}


export default Home;
